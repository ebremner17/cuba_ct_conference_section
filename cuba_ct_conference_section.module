<?php

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_preprocess_node().
 */
function cuba_ct_conference_section_preprocess_node(&$variables) {

  $variables['base_path'] = base_path();
}


/**
 * Implements hook_form_alter() for \Drupal\node\NodeForm.
 *
 * Update parent item based on conference name selection.
 */
function cuba_ct_conference_section_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  // Ensure that we are on a conference section.
  if ($form_id == 'node_cuba_ct_conference_section_form' || $form_id == 'node_cuba_ct_conference_section_edit_form') {

    // Add the ajax call to update the parent menu in menu settings.
    $form['field_cuba_cs_conference_name']['widget']['#ajax'] = [
      'callback' => '_cuba_ct_conference_section_update_parent_menu',
      'event' => 'change',
      'wrapper' => 'cuba-parent-menu-wrapper',
    ];

    // Add the prefix and suffix so that our ajax works.
    $form['menu']['link']['menu_parent']['#prefix'] = '<div id="cuba-parent-menu-wrapper">';
    $form['menu']['link']['menu_parent']['#suffix'] = '</div>';
  }

  // If we are on the confernce section edit, try and add title and conference defaults.
  if ($form_id == 'node_cuba_ct_conference_section_edit_form') {

    // If the menu link title is not set, set it to the node title.
    if ($form['menu']['link']['title']['#default_value'] == '') {

      // Set the menu link title to the node title.
      $form['menu']['link']['title']['#default_value'] = $form["title"]["widget"][0]["value"]["#default_value"];

      // Step through all of the options for the menu link parent and find the conference specified
      // in the drop down list of conference name.
      foreach ($form["menu"]["link"]["menu_parent"]["#options"] as $key => $option) {

        // Explode the key to get the taxonomy name.
        $tax_key = explode(':', $key);

        // If the last element in the array is not blank, then try and see if
        // the conference name is the same.
        if (end($tax_key) !== "") {

          // Explode the key about to get tid, which is last element.
          $end_key = explode('.', end($tax_key));

          // If the last element is equal to the conference name selected, set parent menu.
          if (end($end_key) == $form["field_cuba_cs_conference_name"]["widget"]["#default_value"][0]) {

              // Set the menu parent default value.
            $form["menu"]["link"]["menu_parent"]["#default_value"] = $key;

            // Break out of the loop.
            break;
          }
        }
      }
    }
  }

}

/**
 * Ajax callback to update parent menu in menu settings.
 *
 * @param array $form
 * @param FormStateInterface $form_state
 * @return mixed
 */
function _cuba_ct_conference_section_update_parent_menu(array &$form, FormStateInterface $form_state) {

  // Get the term id from the form state of the conference name drop down.
  $tid = $form_state->getValue('field_cuba_cs_conference_name')[0]['target_id'];

  // Set the default value for the parent menu.
  $default_value = 'cuba-menu-conferences:taxonomy_menu.menu_link:taxonomy_menu.menu_link.cuba_tax_menu_conferences.' . $tid;

  // Set the value for the parent item.
  $form['menu']['link']['menu_parent']['#value'] = $default_value;

  // Return the build array for the parent item.
  return $form['menu']['link']['menu_parent'];
}

/**
 * Implements hook_module_implements_alter().
 *
 * Ensure that form alter for conference section runs last.
 */
function cuba_ct_conference_section_module_implements_alter(&$implementations, $hook) {

  // If the hook is form alter, move conference section to last.
  if ($hook == 'form_alter') {

    // Move my_module_form_alter() to the end of the list.
    // \Drupal::moduleHandler()->getImplementations()
    // iterates through $implementations with a foreach loop which PHP iterates
    // in the order that the items were added, so to move an item to the end of
    // the array, we remove it and then add it.
    $group = $implementations['cuba_ct_conference_section'];
    unset($implementations['cuba_ct_conference_section']);
    $implementations['cuba_ct_conference_section'] = $group;
  }
}
